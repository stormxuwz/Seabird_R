ls
setwd("~/Developer/Seabird_R/")
read_cnv_meta <- function(line) {
splits0 <- strsplit(line, "=")[1] |> trimws
return(strsplit(line, ";")[0])
}
read_cnv_meta <- function(line) {
splits0 <- strsplit(line, "=")[1] |> trimws()
return(strsplit(line, ";")[0])
}
read_cnv_meta("# name 6 = altM: Altimeter [m]")
read_cnv_meta <- function(line) {
splits0 <- strsplit(line, "=")[1] |> trimws()
print(splits0)
return(strsplit(line, ";")[0])
}
read_cnv_meta("# name 6 = altM: Altimeter [m]")
strsplit("abc_abc","_")
strsplit("abc_abc","_")[[1]]
read_cnv_meta <- function(line) {
splits0 <- strsplit(line, "=")[[1]][2] |> trimws()
print(splits0)
return(strsplit(line, ";")[0])
}
read_cnv_meta("# name 6 = altM: Altimeter [m]")
read_cnv_meta <- function(line) {
splits0 <- strsplit(line, "=")[[1]][2] |> trimws()
return(strsplit(line, ":")[[1]][1])
}
read_cnv_meta("# name 6 = altM: Altimeter [m]")
read_cnv_meta <- function(line) {
tmp <- strsplit(line, "=")[[1]][2] |> trimws()
return(strsplit(tmp, ":")[[1]][1])
}
read_cnv_meta("# name 6 = altM: Altimeter [m]")
?readLines ()
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
return(lines)
}
f <- "~/Developer/SeabirdCode-master/sample.cnv"
read_cnv_file(f)
k = c()
k += 1
k = k + 1
k
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
is_data_line <- FALSE
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
is_data_line <- TRUE
}
}
close(con)
return(lines)
}
k <- read_cnv_file("/Users/wenzhaoxu/Developer/SeabirdCode-master/sample.cnv")
k[270:280]
k[273:280]
read.csv("/Users/wenzhaoxu/Developer/SeabirdCode-master/sample.cnv", sep = " ", skip = 272)
read.csv("/Users/wenzhaoxu/Developer/SeabirdCode-master/sample.cnv", sep = " ", skip = 272, header = FALSE)
read.csv("/Users/wenzhaoxu/Developer/SeabirdCode-master/sample.cnv", sep = "\t", skip = 272, header = FALSE)
a = read.csv("/Users/wenzhaoxu/Developer/SeabirdCode-master/sample.cnv", sep = "\t", skip = 272, header = FALSE)
test <- "      0.732    23.9124   0.003025    6.05896 1.4522e+03      5.313"
strsplit(test, " ")
strsplit(test, "")
strsplit(test, " ")
install.packages("stringr")
strsplit(test, " ")
strsplit(test, " ") |> lapply( function(x) {x != ""})
f
read_cnv_data(test)
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
tmp[lapply(tmp, function(x) {x != ""})] |> lapply( as.double())
}
read_cnv_data(test)
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
tmp[lapply(tmp, function(x) {x != ""})] |> lapply( function(x){as.double(x)})
}
read_cnv_data(test)
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
print(tmp)
tmp[lapply(tmp, function(x) {x != ""})] |> lapply( function(x){as.double(x)})
}
read_cnv_data(test)
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
print(tmp)
print(tmp[lapply(tmp, function(x) {x != ""})])
# |> lapply( function(x){as.double(x)})
}
read_cnv_data(test)
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
print(tmp)
print(tmp[sapply(tmp, function(x) {x != ""})])
# |> lapply( function(x){as.double(x)})
}
read_cnv_data(test)
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
result <- tmp[sapply(tmp, function(x) {x != ""})] |> sapply( function(x){as.double(x)})
return(result)
}
read_cnv_data(test)
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
data <- lines[counter: n] |> lapply(read_cnv_data) |> as.data.frame(feature_columns)
close(con)
return(data)
}
f
read_cnv_file(f)
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
data <- lines[counter: n] |> lapply(read_cnv_data) #|> as.data.frame(feature_columns)
close(con)
return(data)
}
a = read_cnv_file(f)
a[1]
a[2]
data.frame(a)
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
data <- lines[counter: n] |> sapply(read_cnv_data) #|> as.data.frame(feature_columns)
close(con)
return(data)
}
a = read_cnv_file(f)
a[0]
a[1]
a
data.frame(t(a))
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
data <- lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame(feature_columns)
close(con)
return(data)
}
a = read_cnv_file(f)
a
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
print(feature_columns)
data <- lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame(row.names = feature_columns)
close(con)
return(data)
}
a = read_cnv_file(f)
a
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
print(feature_columns)
data <- lines[counter: n] |> sapply(read_cnv_data) |> t() |> data.frame(row.names = feature_columns)
close(con)
return(data)
}
read_cnv_file(f)
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
print(feature_columns)
data <- lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame(row.names = NULL)
close(con)
return(data)
}
read_cnv_file(f)
b <- read_cnv_file(f)
columns(b)
column(b)
names(b)
?data.frame
debugSource("~/Developer/Seabird_R/file_parser.R")
b <- read_cnv_file(f)
lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame(row.names = feature_columns)
feature_columns
lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame(x=., row.names = feature_columns)
feature_columns
abc <- lines[counter: n] |> sapply(read_cnv_data) |> t()
data.frame(abc, row.names=feature_columns)
abc <- lines[counter: n] |> sapply(read_cnv_data) |> t() |> data.frame(names=feature_columns)
abc <- lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame(names=feature_columns)
abc
names(abc)
a
ccc =  lines[counter: n] |> lapply(read_cnv_data)
ccc[0]
ccc[1]
data.frame(ccc)
data.frame(setNames(ccc, feature_columns))
lines[counter: n] |> lapply(read_cnv_data) |> t() |> type()
lines[counter: n] |> sapply(read_cnv_data) |> t() |> typeof()
lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame()
lines[counter: n] |> sapply(read_cnv_data) |> t() |> as.data.frame() |> head(1)
t <- lines[counter: (counter + 100)]
t
t <- lines[counter: (counter + 20)]
t
t
t |> lapply(read_cnv_data)
t |> sapply(read_cnv_data) |> t()
t |> sapply(read_cnv_data)
read_cnv_data("      1.999    22.1973   0.284789    8.73165 6.8354e+02")
abc = read_cnv_data("      1.999    22.1973   0.284789    8.73165 6.8354e+02")
?apply
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
result <- tmp[sapply(tmp, function(x) {x != ""})] |> apply( function(x){as.double(x)})
return(result)
}
b <- read_cnv_file(f)
source("~/Developer/Seabird_R/file_parser.R")
read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
?sapply
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
result <- tmp[sapply(tmp, function(x) {x != ""})] |> sapply( function(x){as.double(x)})
return(result)
}
read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
c(read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02"))
read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
result <- tmp[sapply(tmp, function(x) {x != ""})] |> sapply( function(x){as.double(x)})
setNames(result) <- NULL
return(result)
}
read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
result <- tmp[sapply(tmp, function(x) {x != ""})] |> sapply( function(x){as.double(x)})
setNames(result, NULL)
return(result)
}
read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
kÂº <- read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
k <- read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
names(k)
setNames(k, NULL)
k
read_cnv_data <- function(line) {
tmp <- strsplit(line, " ")[[1]]
result <- tmp[sapply(tmp, function(x) {x != ""})] |>
sapply( function(x){as.double(x)}) |>
setNames(NULL)
return(result)
}
k <- read_cnv_data("1.999    22.1973   0.284789    8.73165 6.8354e+02")
k
source("~/Developer/Seabird_R/file_parser.R")
read_cnv_file(f)
read_cnv_file <- function(filename) {
con <- file(filename, "r")
lines <- readLines(con)
feature_columns <- c()
n <- length(lines)
counter <- 1
for (line in lines) {
if (startsWith(line, "# name")) {
feature_columns <- c(feature_columns, read_cnv_meta(line))
}
if (line == "*END*") {
break
}
counter <- counter + 1
}
counter <- counter + 1
data <- lines[counter: (counter + 20)] |> sapply(read_cnv_data) |> as.data.frame()
close(con)
return(data)
}
read_cnv_file(f)
source("~/Developer/Seabird_R/file_parser.R")
ff <- read_cnv_file(f)
names(ff)
ff
t(ff)
debugSource("~/Developer/Seabird_R/file_parser.R")
ff <- read_cnv_file(f)
lines[counter: (counter + 20)]
lines[counter: (counter + 20)] |> sapply(read_cnv_data, )
lines[counter: (counter + 20)] |> sapply(read_cnv_data)
lines[counter: (counter + 20)] |> sapply(read_cnv_data) |> setNames(NULL)
lines[counter: (counter + 20)] |> sapply(read_cnv_data) |> setNames(NULL)
a <- lines[counter: (counter + 20)] |> sapply(read_cnv_data)
names(a)
a[0]
a[1]
t(a)
t(a) |> data.frame()
a
a[1]
a[1,1]
a[1,2]
a
a.dim
dim(a)
t(a) |> data.frame(row.names=NULL)
t(a) |> data.frame(row.names=NULL, col.names=feature_columns)
length(feature_columns)
dim(t(a)()
ff <- read_cnv_file(f
source("~/Developer/Seabird_R/file_parser.R")
read_cnv_file(f)
source("~/Developer/Seabird_R/file_parser.R")
read_cnv_file(f)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
